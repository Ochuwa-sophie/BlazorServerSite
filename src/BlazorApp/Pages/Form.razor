@page "/form"
@using BlazorApp
@inject FormService service

<h1>Contact Me</h1>

<EditForm Model="BlogPostModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="row mt-4">
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="BlogPostModel.Title" class="form-control" />
    </div>
    <div class="row mt-4">
        <label for="slug">Slug</label>
        <InputText id="slug" @bind-Value="BlogPostModel.Slug" class="form-control" />
    </div>
    <div class="row mt-4">
        <InputTextArea @bind-Value="BlogPostModel.Content" class="form-control" rows="10" />
    </div>
    <div class="row mt-4">
        <button type="submit" class="btn btn-primary">Publish</button>
    </div>
    <div class="row mt-4">
        <ValidationSummary />
    </div>

</EditForm>

@code {
    protected BlogPost BlogPostModel { get; set; } = new BlogPost();

    // protected void HandleValidSubmit()
    protected override async Task OnInitializedAsync()
    {
        await RefreshForms();
    }

    private async Task RefreshForms()
    {
        Forms = await service.GetFormAsync();
    }
    public Form NewForm { get; set; } = new Form();
    private async Task AddNewForm()
    {
        await service.AddFormAsync(NewForm);
        NewForm = new Form();
        await RefreshForms();
    }
    Form UpdateProduct = new Form();
    private void SetProductForUpdate(Form form)
    {
        UpdateProduct = product;
    }
}
}

